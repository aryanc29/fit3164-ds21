name: Build and Publish Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # —— 调试构建上下文（关键）——
      - name: Debug build context
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -la
          echo "--- .dockerignore ---"
          [ -f .dockerignore ] && cat .dockerignore || echo "(no .dockerignore)"
          echo "--- existence check ---"
          [ -d src ] && echo "src exists" || echo "src MISSING"
          [ -d frontend ] && echo "frontend exists" || echo "frontend MISSING"
          [ -d config ] && echo "config exists" || echo "config MISSING"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .             # 根目录作为 Build Context
          file: ./Dockerfile     # Dockerfile 在根目录
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/fit3164-dashboard:latest
            ghcr.io/${{ github.repository_owner }}/fit3164-dashboard:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image info
        run: |
          echo "✅ Image published: ghcr.io/${{ github.repository_owner }}/fit3164-dashboard:latest"

